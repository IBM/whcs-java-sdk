<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="78" passed="78">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="4496" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:40 UTC">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="4496" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:40 UTC">
      <class name="com.ibm.watson.health.acd.v1.model.AnnotatorFlowTest">
        <test-method status="PASS" signature="testAnnotatorFlow()[pri:0, instance:com.ibm.watson.health.acd.v1.model.AnnotatorFlowTest@574f9e36]" name="testAnnotatorFlow" duration-ms="1" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAnnotatorFlow -->
      </class> <!-- com.ibm.watson.health.acd.v1.model.AnnotatorFlowTest -->
      <class name="com.ibm.watson.health.acd.v1.model.AnalyticFlowBeanInputTest">
        <test-method status="PASS" signature="testAnalyticFlowBeanInput()[pri:0, instance:com.ibm.watson.health.acd.v1.model.AnalyticFlowBeanInputTest@7d483ebe]" name="testAnalyticFlowBeanInput" duration-ms="4" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAnalyticFlowBeanInput -->
      </class> <!-- com.ibm.watson.health.acd.v1.model.AnalyticFlowBeanInputTest -->
      <class name="com.ibm.watson.health.acd.v1.model.ServiceStatusTest">
        <test-method status="PASS" signature="testServiceStatus()[pri:0, instance:com.ibm.watson.health.acd.v1.model.ServiceStatusTest@70aa03c0]" name="testServiceStatus" duration-ms="1" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testServiceStatus -->
      </class> <!-- com.ibm.watson.health.acd.v1.model.ServiceStatusTest -->
      <class name="com.ibm.watson.health.acd.v1.model.CreateProfileOptionsTest">
        <test-method status="PASS" signature="testCreateProfileOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.model.CreateProfileOptionsTest@44da745f]" name="testCreateProfileOptions" duration-ms="4" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateProfileOptions -->
      </class> <!-- com.ibm.watson.health.acd.v1.model.CreateProfileOptionsTest -->
      <class name="com.ibm.watson.health.acd.v1.model.ConfigurationEntityTest">
        <test-method status="PASS" signature="testConfigurationEntity()[pri:0, instance:com.ibm.watson.health.acd.v1.model.ConfigurationEntityTest@cea67b1]" name="testConfigurationEntity" duration-ms="0" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConfigurationEntity -->
      </class> <!-- com.ibm.watson.health.acd.v1.model.ConfigurationEntityTest -->
      <class name="com.ibm.watson.health.acd.v1.model.DeleteUserSpecificArtifactsOptionsTest">
        <test-method status="PASS" signature="testDeleteUserSpecificArtifactsOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.model.DeleteUserSpecificArtifactsOptionsTest@23d23d98]" name="testDeleteUserSpecificArtifactsOptions" duration-ms="1" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteUserSpecificArtifactsOptions -->
      </class> <!-- com.ibm.watson.health.acd.v1.model.DeleteUserSpecificArtifactsOptionsTest -->
      <class name="com.ibm.watson.health.acd.v1.model.RunPipelineOptionsTest">
        <test-method status="PASS" signature="testRunPipelineOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.model.RunPipelineOptionsTest@40db6136]" name="testRunPipelineOptions" duration-ms="4" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRunPipelineOptions -->
      </class> <!-- com.ibm.watson.health.acd.v1.model.RunPipelineOptionsTest -->
      <class name="com.ibm.watson.health.acd.v1.model.AnnotatorTest">
        <test-method status="PASS" signature="testAnnotator()[pri:0, instance:com.ibm.watson.health.acd.v1.model.AnnotatorTest@3151277f]" name="testAnnotator" duration-ms="187" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAnnotator -->
        <test-method status="PASS" signature="testAnnotatorError()[pri:0, instance:com.ibm.watson.health.acd.v1.model.AnnotatorTest@3151277f]" name="testAnnotatorError" duration-ms="1" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:36 UTC">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[name cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: name cannot be null
at com.ibm.watson.developer_cloud.util.Validator.notNull(Validator.java:96)
at com.ibm.watson.health.acd.v1.model.Annotator.<init>(Annotator.java:217)
at com.ibm.watson.health.acd.v1.model.Annotator.<init>(Annotator.java:27)
at com.ibm.watson.health.acd.v1.model.Annotator$Builder.build(Annotator.java:130)
at com.ibm.watson.health.acd.v1.model.AnnotatorTest.testAnnotatorError(AnnotatorTest.java:68)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAnnotatorError -->
      </class> <!-- com.ibm.watson.health.acd.v1.model.AnnotatorTest -->
      <class name="com.ibm.watson.health.acd.v1.model.GetProfilesOptionsTest">
        <test-method status="PASS" signature="testGetProfilesOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.model.GetProfilesOptionsTest@2aeb7c4c]" name="testGetProfilesOptions" duration-ms="2" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetProfilesOptions -->
      </class> <!-- com.ibm.watson.health.acd.v1.model.GetProfilesOptionsTest -->
      <class name="com.ibm.watson.health.acd.v1.model.DeleteFlowsOptionsTest">
        <test-method status="PASS" signature="testDeleteFlowsOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.model.DeleteFlowsOptionsTest@36cf6377]" name="testDeleteFlowsOptions" duration-ms="21" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteFlowsOptions -->
        <test-method status="PASS" signature="testDeleteFlowsOptionsError()[pri:0, instance:com.ibm.watson.health.acd.v1.model.DeleteFlowsOptionsTest@36cf6377]" name="testDeleteFlowsOptionsError" duration-ms="1" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:36 UTC">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[id cannot be empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: id cannot be empty
at com.ibm.cloud.sdk.core.util.Validator.notEmpty(Validator.java:84)
at com.ibm.watson.health.acd.v1.model.DeleteFlowsOptions.<init>(DeleteFlowsOptions.java:71)
at com.ibm.watson.health.acd.v1.model.DeleteFlowsOptions$Builder.build(DeleteFlowsOptions.java:55)
at com.ibm.watson.health.acd.v1.model.DeleteFlowsOptionsTest.testDeleteFlowsOptionsError(DeleteFlowsOptionsTest.java:44)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteFlowsOptionsError -->
      </class> <!-- com.ibm.watson.health.acd.v1.model.DeleteFlowsOptionsTest -->
      <class name="com.ibm.watson.health.acd.v1.model.ServiceErrorTest">
        <test-method status="PASS" signature="testServiceError()[pri:0, instance:com.ibm.watson.health.acd.v1.model.ServiceErrorTest@2435c6ae]" name="testServiceError" duration-ms="1" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testServiceError -->
      </class> <!-- com.ibm.watson.health.acd.v1.model.ServiceErrorTest -->
      <class name="com.ibm.watson.health.acd.v1.model.GetFlowsByIdOptionsTest">
        <test-method status="PASS" signature="testGetFlowsByIdOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.model.GetFlowsByIdOptionsTest@30ed2a26]" name="testGetFlowsByIdOptions" duration-ms="2" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFlowsByIdOptions -->
        <test-method status="PASS" signature="testGetFlowsByIdOptionsError()[pri:0, instance:com.ibm.watson.health.acd.v1.model.GetFlowsByIdOptionsTest@30ed2a26]" name="testGetFlowsByIdOptionsError" duration-ms="0" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:36 UTC">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[id cannot be empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: id cannot be empty
at com.ibm.cloud.sdk.core.util.Validator.notEmpty(Validator.java:84)
at com.ibm.watson.health.acd.v1.model.GetFlowsByIdOptions.<init>(GetFlowsByIdOptions.java:71)
at com.ibm.watson.health.acd.v1.model.GetFlowsByIdOptions$Builder.build(GetFlowsByIdOptions.java:55)
at com.ibm.watson.health.acd.v1.model.GetFlowsByIdOptionsTest.testGetFlowsByIdOptionsError(GetFlowsByIdOptionsTest.java:44)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFlowsByIdOptionsError -->
      </class> <!-- com.ibm.watson.health.acd.v1.model.GetFlowsByIdOptionsTest -->
      <class name="com.ibm.watson.health.acd.v1.model.ListStringWrapperTest">
        <test-method status="PASS" signature="testListStringWrapper()[pri:0, instance:com.ibm.watson.health.acd.v1.model.ListStringWrapperTest@30437e9c]" name="testListStringWrapper" duration-ms="0" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListStringWrapper -->
      </class> <!-- com.ibm.watson.health.acd.v1.model.ListStringWrapperTest -->
      <class name="com.ibm.watson.health.acd.v1.model.CartridgesGetOptionsTest">
        <test-method status="PASS" signature="testCartridgesGetOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.model.CartridgesGetOptionsTest@6fc6f68f]" name="testCartridgesGetOptions" duration-ms="1" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCartridgesGetOptions -->
      </class> <!-- com.ibm.watson.health.acd.v1.model.CartridgesGetOptionsTest -->
      <class name="com.ibm.watson.health.acd.v1.model.GetAnnotatorsOptionsTest">
        <test-method status="PASS" signature="testGetAnnotatorsOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.model.GetAnnotatorsOptionsTest@5ced0537]" name="testGetAnnotatorsOptions" duration-ms="0" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAnnotatorsOptions -->
      </class> <!-- com.ibm.watson.health.acd.v1.model.GetAnnotatorsOptionsTest -->
      <class name="com.ibm.watson.health.acd.v1.model.GetFlowsOptionsTest">
        <test-method status="PASS" signature="testGetFlowsOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.model.GetFlowsOptionsTest@6b630d4b]" name="testGetFlowsOptions" duration-ms="1" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFlowsOptions -->
      </class> <!-- com.ibm.watson.health.acd.v1.model.GetFlowsOptionsTest -->
      <class name="com.ibm.watson.health.acd.v1.model.FlowEntryTest">
        <test-method status="PASS" signature="testFlowEntry()[pri:0, instance:com.ibm.watson.health.acd.v1.model.FlowEntryTest@6a3e633a]" name="testFlowEntry" duration-ms="0" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFlowEntry -->
      </class> <!-- com.ibm.watson.health.acd.v1.model.FlowEntryTest -->
      <class name="com.ibm.watson.health.acd.v1.model.GetProfileOptionsTest">
        <test-method status="PASS" signature="testGetProfileOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.model.GetProfileOptionsTest@6ee1ddcf]" name="testGetProfileOptions" duration-ms="1" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetProfileOptions -->
        <test-method status="PASS" signature="testGetProfileOptionsError()[pri:0, instance:com.ibm.watson.health.acd.v1.model.GetProfileOptionsTest@6ee1ddcf]" name="testGetProfileOptionsError" duration-ms="0" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:36 UTC">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[id cannot be empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: id cannot be empty
at com.ibm.cloud.sdk.core.util.Validator.notEmpty(Validator.java:84)
at com.ibm.watson.health.acd.v1.model.GetProfileOptions.<init>(GetProfileOptions.java:71)
at com.ibm.watson.health.acd.v1.model.GetProfileOptions$Builder.build(GetProfileOptions.java:55)
at com.ibm.watson.health.acd.v1.model.GetProfileOptionsTest.testGetProfileOptionsError(GetProfileOptionsTest.java:44)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetProfileOptionsError -->
      </class> <!-- com.ibm.watson.health.acd.v1.model.GetProfileOptionsTest -->
      <class name="com.ibm.watson.health.acd.v1.model.DeployCartridgeResponseTest">
        <test-method status="PASS" signature="testDeployCartridgeResponse()[pri:0, instance:com.ibm.watson.health.acd.v1.model.DeployCartridgeResponseTest@afb7b03]" name="testDeployCartridgeResponse" duration-ms="1" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeployCartridgeResponse -->
      </class> <!-- com.ibm.watson.health.acd.v1.model.DeployCartridgeResponseTest -->
      <class name="com.ibm.watson.health.acd.v1.model.UpdateProfileOptionsTest">
        <test-method status="PASS" signature="testUpdateProfileOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.model.UpdateProfileOptionsTest@3b1137b0]" name="testUpdateProfileOptions" duration-ms="4" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateProfileOptions -->
        <test-method status="PASS" signature="testUpdateProfileOptionsError()[pri:0, instance:com.ibm.watson.health.acd.v1.model.UpdateProfileOptionsTest@3b1137b0]" name="testUpdateProfileOptionsError" duration-ms="0" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:36 UTC">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[id cannot be empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: id cannot be empty
at com.ibm.cloud.sdk.core.util.Validator.notEmpty(Validator.java:84)
at com.ibm.watson.health.acd.v1.model.UpdateProfileOptions.<init>(UpdateProfileOptions.java:221)
at com.ibm.watson.health.acd.v1.model.UpdateProfileOptions$Builder.build(UpdateProfileOptions.java:82)
at com.ibm.watson.health.acd.v1.model.UpdateProfileOptionsTest.testUpdateProfileOptionsError(UpdateProfileOptionsTest.java:82)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateProfileOptionsError -->
      </class> <!-- com.ibm.watson.health.acd.v1.model.UpdateProfileOptionsTest -->
      <class name="com.ibm.watson.health.acd.v1.model.CreateFlowsOptionsTest">
        <test-method status="PASS" signature="testCreateFlowsOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.model.CreateFlowsOptionsTest@60b4d934]" name="testCreateFlowsOptions" duration-ms="3" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateFlowsOptions -->
      </class> <!-- com.ibm.watson.health.acd.v1.model.CreateFlowsOptionsTest -->
      <class name="com.ibm.watson.health.acd.v1.model.FlowTest">
        <test-method status="PASS" signature="testFlow()[pri:0, instance:com.ibm.watson.health.acd.v1.model.FlowTest@67f266bd]" name="testFlow" duration-ms="7" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFlow -->
      </class> <!-- com.ibm.watson.health.acd.v1.model.FlowTest -->
      <class name="com.ibm.watson.health.acd.v1.model.UnstructuredContainerTest">
        <test-method status="PASS" signature="testUnstructuredContainer()[pri:0, instance:com.ibm.watson.health.acd.v1.model.UnstructuredContainerTest@78ea700f]" name="testUnstructuredContainer" duration-ms="41" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUnstructuredContainer -->
      </class> <!-- com.ibm.watson.health.acd.v1.model.UnstructuredContainerTest -->
      <class name="com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest">
        <test-method status="PASS" signature="beforePowerMockTestClass()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="beforePowerMockTestClass" is-config="true" duration-ms="3" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestClass -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1010" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:37 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="setUpMockServer" is-config="true" duration-ms="573" started-at="2021-01-14T19:30:37 UTC" finished-at="2021-01-14T19:30:38 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testCartridgesGetIdNoOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="testCartridgesGetIdNoOptions" duration-ms="1243" started-at="2021-01-14T19:30:38 UTC" finished-at="2021-01-14T19:30:39 UTC">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[cartridgesGetIdOptions cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: cartridgesGetIdOptions cannot be null
at com.ibm.cloud.sdk.core.util.Validator.notNull(Validator.java:97)
at com.ibm.watson.health.acd.v1.AnnotatorForClinicalData.cartridgesGetId(AnnotatorForClinicalData.java:1381)
at com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest.testCartridgesGetIdNoOptions(AnnotatorForClinicalDataAcdTest.java:1184)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCartridgesGetIdNoOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="tearDownMockServer" is-config="true" duration-ms="3" started-at="2021-01-14T19:30:39 UTC" finished-at="2021-01-14T19:30:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="afterPowerMockTestMethod" is-config="true" duration-ms="4" started-at="2021-01-14T19:30:39 UTC" finished-at="2021-01-14T19:30:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="beforePowerMockTestMethod" is-config="true" duration-ms="0" started-at="2021-01-14T19:30:39 UTC" finished-at="2021-01-14T19:30:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="setUpMockServer" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:39 UTC" finished-at="2021-01-14T19:30:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testCartridgesGetIdWOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="testCartridgesGetIdWOptions" duration-ms="344" started-at="2021-01-14T19:30:39 UTC" finished-at="2021-01-14T19:30:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCartridgesGetIdWOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="tearDownMockServer" is-config="true" duration-ms="3" started-at="2021-01-14T19:30:39 UTC" finished-at="2021-01-14T19:30:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2021-01-14T19:30:39 UTC" finished-at="2021-01-14T19:30:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:39 UTC" finished-at="2021-01-14T19:30:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="setUpMockServer" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:39 UTC" finished-at="2021-01-14T19:30:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testCartridgesGetWOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="testCartridgesGetWOptions" duration-ms="15" started-at="2021-01-14T19:30:39 UTC" finished-at="2021-01-14T19:30:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCartridgesGetWOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="tearDownMockServer" is-config="true" duration-ms="2" started-at="2021-01-14T19:30:39 UTC" finished-at="2021-01-14T19:30:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2021-01-14T19:30:39 UTC" finished-at="2021-01-14T19:30:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:39 UTC" finished-at="2021-01-14T19:30:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="setUpMockServer" is-config="true" duration-ms="0" started-at="2021-01-14T19:30:39 UTC" finished-at="2021-01-14T19:30:39 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testCartridgesPostMultipartWOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="testCartridgesPostMultipartWOptions" duration-ms="38" started-at="2021-01-14T19:30:39 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCartridgesPostMultipartWOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="tearDownMockServer" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="setUpMockServer" is-config="true" duration-ms="0" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testCartridgesPutMultipartWOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="testCartridgesPutMultipartWOptions" duration-ms="16" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCartridgesPutMultipartWOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="tearDownMockServer" is-config="true" duration-ms="2" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="setUpMockServer" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testConstructorWithNullAuthenticator()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="testConstructorWithNullAuthenticator" duration-ms="28" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Authentication information was not properly configured.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Authentication information was not properly configured.
at com.ibm.cloud.sdk.core.service.BaseService.<init>(BaseService.java:100)
at com.ibm.watson.health.acd.v1.AnnotatorForClinicalData.<init>(AnnotatorForClinicalData.java:124)
at com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest.testConstructorWithNullAuthenticator(AnnotatorForClinicalDataAcdTest.java:125)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConstructorWithNullAuthenticator -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="tearDownMockServer" is-config="true" duration-ms="3" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="setUpMockServer" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testCreateFlowsWOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="testCreateFlowsWOptions" duration-ms="70" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateFlowsWOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="tearDownMockServer" is-config="true" duration-ms="3" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="setUpMockServer" is-config="true" duration-ms="0" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testCreateProfileWOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="testCreateProfileWOptions" duration-ms="20" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateProfileWOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="tearDownMockServer" is-config="true" duration-ms="3" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="setUpMockServer" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testDeleteFlowsNoOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="testDeleteFlowsNoOptions" duration-ms="6" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[deleteFlowsOptions cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: deleteFlowsOptions cannot be null
at com.ibm.cloud.sdk.core.util.Validator.notNull(Validator.java:97)
at com.ibm.watson.health.acd.v1.AnnotatorForClinicalData.deleteFlows(AnnotatorForClinicalData.java:616)
at com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest.testDeleteFlowsNoOptions(AnnotatorForClinicalDataAcdTest.java:707)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteFlowsNoOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="tearDownMockServer" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="setUpMockServer" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testDeleteFlowsWOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="testDeleteFlowsWOptions" duration-ms="12" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteFlowsWOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="tearDownMockServer" is-config="true" duration-ms="2" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="setUpMockServer" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="beforePowerMockTestMethod" is-config="true" duration-ms="0" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="testDeleteProfileNoOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="testDeleteProfileNoOptions" duration-ms="6" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[deleteProfileOptions cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: deleteProfileOptions cannot be null
at com.ibm.cloud.sdk.core.util.Validator.notNull(Validator.java:97)
at com.ibm.watson.health.acd.v1.AnnotatorForClinicalData.deleteProfile(AnnotatorForClinicalData.java:370)
at com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest.testDeleteProfileNoOptions(AnnotatorForClinicalDataAcdTest.java:405)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteProfileNoOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="tearDownMockServer" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="setUpMockServer" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testDeleteProfileWOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="testDeleteProfileWOptions" duration-ms="12" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteProfileWOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="tearDownMockServer" is-config="true" duration-ms="2" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="setUpMockServer" is-config="true" duration-ms="0" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testDeleteUserSpecificArtifactsWOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="testDeleteUserSpecificArtifactsWOptions" duration-ms="8" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteUserSpecificArtifactsWOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="tearDownMockServer" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="beforePowerMockTestMethod" is-config="true" duration-ms="0" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="setUpMockServer" is-config="true" duration-ms="0" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testDeployCartridgeWOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="testDeployCartridgeWOptions" duration-ms="13" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeployCartridgeWOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="tearDownMockServer" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="setUpMockServer" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testGetAnnotatorsByIdNoOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="testGetAnnotatorsByIdNoOptions" duration-ms="5" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[getAnnotatorsByIdOptions cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: getAnnotatorsByIdOptions cannot be null
at com.ibm.cloud.sdk.core.util.Validator.notNull(Validator.java:97)
at com.ibm.watson.health.acd.v1.AnnotatorForClinicalData.getAnnotatorsById(AnnotatorForClinicalData.java:1204)
at com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest.testGetAnnotatorsByIdNoOptions(AnnotatorForClinicalDataAcdTest.java:979)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAnnotatorsByIdNoOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="tearDownMockServer" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="beforePowerMockTestMethod" is-config="true" duration-ms="2" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="setUpMockServer" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testGetAnnotatorsByIdWOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="testGetAnnotatorsByIdWOptions" duration-ms="14" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAnnotatorsByIdWOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="tearDownMockServer" is-config="true" duration-ms="2" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="setUpMockServer" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testGetAnnotatorsWOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="testGetAnnotatorsWOptions" duration-ms="15" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAnnotatorsWOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="tearDownMockServer" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="beforePowerMockTestMethod" is-config="true" duration-ms="0" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="setUpMockServer" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testGetFlowsByIdNoOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="testGetFlowsByIdNoOptions" duration-ms="5" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[getFlowsByIdOptions cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: getFlowsByIdOptions cannot be null
at com.ibm.cloud.sdk.core.util.Validator.notNull(Validator.java:97)
at com.ibm.watson.health.acd.v1.AnnotatorForClinicalData.getFlowsById(AnnotatorForClinicalData.java:541)
at com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest.testGetFlowsByIdNoOptions(AnnotatorForClinicalDataAcdTest.java:568)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFlowsByIdNoOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="tearDownMockServer" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="setUpMockServer" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="beforePowerMockTestMethod" is-config="true" duration-ms="0" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="testGetFlowsByIdWOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="testGetFlowsByIdWOptions" duration-ms="16" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFlowsByIdWOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="tearDownMockServer" is-config="true" duration-ms="2" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="setUpMockServer" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="beforePowerMockTestMethod" is-config="true" duration-ms="0" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="testGetFlowsWOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="testGetFlowsWOptions" duration-ms="163" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFlowsWOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="tearDownMockServer" is-config="true" duration-ms="5" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="testGetHealthCheckStatusWOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="testGetHealthCheckStatusWOptions" duration-ms="23" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHealthCheckStatusWOptions -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="setUpMockServer" is-config="true" duration-ms="0" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="tearDownMockServer" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="setUpMockServer" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testGetProfileNoOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="testGetProfileNoOptions" duration-ms="5" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[getProfileOptions cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: getProfileOptions cannot be null
at com.ibm.cloud.sdk.core.util.Validator.notNull(Validator.java:97)
at com.ibm.watson.health.acd.v1.AnnotatorForClinicalData.getProfile(AnnotatorForClinicalData.java:295)
at com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest.testGetProfileNoOptions(AnnotatorForClinicalDataAcdTest.java:280)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetProfileNoOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="tearDownMockServer" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="setUpMockServer" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testGetProfileWOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="testGetProfileWOptions" duration-ms="21" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetProfileWOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="tearDownMockServer" is-config="true" duration-ms="2" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="beforePowerMockTestMethod" is-config="true" duration-ms="0" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="testGetProfilesWOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="testGetProfilesWOptions" duration-ms="13" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetProfilesWOptions -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="setUpMockServer" is-config="true" duration-ms="0" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="tearDownMockServer" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="setUpMockServer" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testGetVersion()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="testGetVersion" duration-ms="4" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetVersion -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="tearDownMockServer" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="setUpMockServer" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testRunPipelineWOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="testRunPipelineWOptions" duration-ms="65" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRunPipelineWOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="tearDownMockServer" is-config="true" duration-ms="2" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="beforePowerMockTestMethod" is-config="true" duration-ms="0" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="setUpMockServer" is-config="true" duration-ms="0" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testRunPipelineWithFlowNoOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="testRunPipelineWithFlowNoOptions" duration-ms="4" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[runPipelineWithFlowOptions cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: runPipelineWithFlowOptions cannot be null
at com.ibm.cloud.sdk.core.util.Validator.notNull(Validator.java:97)
at com.ibm.watson.health.acd.v1.AnnotatorForClinicalData.runPipelineWithFlow(AnnotatorForClinicalData.java:801)
at com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest.testRunPipelineWithFlowNoOptions(AnnotatorForClinicalDataAcdTest.java:891)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRunPipelineWithFlowNoOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="tearDownMockServer" is-config="true" duration-ms="0" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="afterPowerMockTestMethod" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="setUpMockServer" is-config="true" duration-ms="0" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testRunPipelineWithFlowWOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="testRunPipelineWithFlowWOptions" duration-ms="29" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRunPipelineWithFlowWOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="tearDownMockServer" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="setUpMockServer" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testUpdateFlowsNoOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="testUpdateFlowsNoOptions" duration-ms="5" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[updateFlowsOptions cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: updateFlowsOptions cannot be null
at com.ibm.cloud.sdk.core.util.Validator.notNull(Validator.java:97)
at com.ibm.watson.health.acd.v1.AnnotatorForClinicalData.updateFlows(AnnotatorForClinicalData.java:567)
at com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest.testUpdateFlowsNoOptions(AnnotatorForClinicalDataAcdTest.java:656)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateFlowsNoOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="tearDownMockServer" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="setUpMockServer" is-config="true" duration-ms="0" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testUpdateFlowsWOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="testUpdateFlowsWOptions" duration-ms="14" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateFlowsWOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="tearDownMockServer" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="beforePowerMockTestMethod" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="setUpMockServer" is-config="true" duration-ms="0" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="testUpdateProfileNoOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="testUpdateProfileNoOptions" duration-ms="5" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[updateProfileOptions cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: updateProfileOptions cannot be null
at com.ibm.cloud.sdk.core.util.Validator.notNull(Validator.java:97)
at com.ibm.watson.health.acd.v1.AnnotatorForClinicalData.updateProfile(AnnotatorForClinicalData.java:321)
at com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest.testUpdateProfileNoOptions(AnnotatorForClinicalDataAcdTest.java:354)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateProfileNoOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="tearDownMockServer" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="setUpMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="setUpMockServer" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMockServer -->
        <test-method status="PASS" signature="beforePowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="beforePowerMockTestMethod" is-config="true" duration-ms="0" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforePowerMockTestMethod -->
        <test-method status="PASS" signature="testUpdateProfileWOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="testUpdateProfileWOptions" duration-ms="15" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateProfileWOptions -->
        <test-method status="PASS" signature="tearDownMockServer()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="tearDownMockServer" is-config="true" duration-ms="1" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMockServer -->
        <test-method status="PASS" signature="afterPowerMockTestMethod()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="afterPowerMockTestMethod" is-config="true" duration-ms="0" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestMethod -->
        <test-method status="PASS" signature="afterPowerMockTestClass()[pri:0, instance:com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest@1bf10539]" name="afterPowerMockTestClass" is-config="true" duration-ms="0" started-at="2021-01-14T19:30:40 UTC" finished-at="2021-01-14T19:30:40 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterPowerMockTestClass -->
      </class> <!-- com.ibm.watson.health.acd.v1.unit.AnnotatorForClinicalDataAcdTest -->
      <class name="com.ibm.watson.health.acd.v1.model.DeleteProfileOptionsTest">
        <test-method status="PASS" signature="testDeleteProfileOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.model.DeleteProfileOptionsTest@762f8ff6]" name="testDeleteProfileOptions" duration-ms="2" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteProfileOptions -->
        <test-method status="PASS" signature="testDeleteProfileOptionsError()[pri:0, instance:com.ibm.watson.health.acd.v1.model.DeleteProfileOptionsTest@762f8ff6]" name="testDeleteProfileOptionsError" duration-ms="1" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:36 UTC">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[id cannot be empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: id cannot be empty
at com.ibm.cloud.sdk.core.util.Validator.notEmpty(Validator.java:84)
at com.ibm.watson.health.acd.v1.model.DeleteProfileOptions.<init>(DeleteProfileOptions.java:71)
at com.ibm.watson.health.acd.v1.model.DeleteProfileOptions$Builder.build(DeleteProfileOptions.java:55)
at com.ibm.watson.health.acd.v1.model.DeleteProfileOptionsTest.testDeleteProfileOptionsError(DeleteProfileOptionsTest.java:44)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteProfileOptionsError -->
      </class> <!-- com.ibm.watson.health.acd.v1.model.DeleteProfileOptionsTest -->
      <class name="com.ibm.watson.health.acd.v1.model.AcdFlowTest">
        <test-method status="PASS" signature="testAcdFlow()[pri:0, instance:com.ibm.watson.health.acd.v1.model.AcdFlowTest@912747d]" name="testAcdFlow" duration-ms="4" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAcdFlow -->
      </class> <!-- com.ibm.watson.health.acd.v1.model.AcdFlowTest -->
      <class name="com.ibm.watson.health.acd.v1.model.AcdCartridgesTest">
        <test-method status="PASS" signature="testAcdCartridges()[pri:0, instance:com.ibm.watson.health.acd.v1.model.AcdCartridgesTest@5d98364c]" name="testAcdCartridges" duration-ms="1" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAcdCartridges -->
      </class> <!-- com.ibm.watson.health.acd.v1.model.AcdCartridgesTest -->
      <class name="com.ibm.watson.health.acd.v1.model.EntityTest">
        <test-method status="PASS" signature="testEntity()[pri:0, instance:com.ibm.watson.health.acd.v1.model.EntityTest@2e057637]" name="testEntity" duration-ms="3" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEntity -->
      </class> <!-- com.ibm.watson.health.acd.v1.model.EntityTest -->
      <class name="com.ibm.watson.health.acd.v1.model.GetHealthCheckStatusOptionsTest">
        <test-method status="PASS" signature="testGetHealthCheckStatusOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.model.GetHealthCheckStatusOptionsTest@1fd35a92]" name="testGetHealthCheckStatusOptions" duration-ms="2" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHealthCheckStatusOptions -->
      </class> <!-- com.ibm.watson.health.acd.v1.model.GetHealthCheckStatusOptionsTest -->
      <class name="com.ibm.watson.health.acd.v1.model.CartridgesGetIdOptionsTest">
        <test-method status="PASS" signature="testCartridgesGetIdOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.model.CartridgesGetIdOptionsTest@21ba0d33]" name="testCartridgesGetIdOptions" duration-ms="2" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCartridgesGetIdOptions -->
        <test-method status="PASS" signature="testCartridgesGetIdOptionsError()[pri:0, instance:com.ibm.watson.health.acd.v1.model.CartridgesGetIdOptionsTest@21ba0d33]" name="testCartridgesGetIdOptionsError" duration-ms="0" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:36 UTC">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[id cannot be empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: id cannot be empty
at com.ibm.cloud.sdk.core.util.Validator.notEmpty(Validator.java:84)
at com.ibm.watson.health.acd.v1.model.CartridgesGetIdOptions.<init>(CartridgesGetIdOptions.java:71)
at com.ibm.watson.health.acd.v1.model.CartridgesGetIdOptions$Builder.build(CartridgesGetIdOptions.java:55)
at com.ibm.watson.health.acd.v1.model.CartridgesGetIdOptionsTest.testCartridgesGetIdOptionsError(CartridgesGetIdOptionsTest.java:44)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCartridgesGetIdOptionsError -->
      </class> <!-- com.ibm.watson.health.acd.v1.model.CartridgesGetIdOptionsTest -->
      <class name="com.ibm.watson.health.acd.v1.model.CartridgesPutMultipartOptionsTest">
        <test-method status="PASS" signature="testCartridgesPutMultipartOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.model.CartridgesPutMultipartOptionsTest@2befb16f]" name="testCartridgesPutMultipartOptions" duration-ms="23" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCartridgesPutMultipartOptions -->
      </class> <!-- com.ibm.watson.health.acd.v1.model.CartridgesPutMultipartOptionsTest -->
      <class name="com.ibm.watson.health.acd.v1.model.DeployCartridgeOptionsTest">
        <test-method status="PASS" signature="testDeployCartridgeOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.model.DeployCartridgeOptionsTest@41abee65]" name="testDeployCartridgeOptions" duration-ms="2" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeployCartridgeOptions -->
      </class> <!-- com.ibm.watson.health.acd.v1.model.DeployCartridgeOptionsTest -->
      <class name="com.ibm.watson.health.acd.v1.model.AcdProfileTest">
        <test-method status="PASS" signature="testAcdProfile()[pri:0, instance:com.ibm.watson.health.acd.v1.model.AcdProfileTest@297dff3a]" name="testAcdProfile" duration-ms="5" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAcdProfile -->
      </class> <!-- com.ibm.watson.health.acd.v1.model.AcdProfileTest -->
      <class name="com.ibm.watson.health.acd.v1.model.GetAnnotatorsByIdOptionsTest">
        <test-method status="PASS" signature="testGetAnnotatorsByIdOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.model.GetAnnotatorsByIdOptionsTest@4fd63c43]" name="testGetAnnotatorsByIdOptions" duration-ms="1" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAnnotatorsByIdOptions -->
        <test-method status="PASS" signature="testGetAnnotatorsByIdOptionsError()[pri:0, instance:com.ibm.watson.health.acd.v1.model.GetAnnotatorsByIdOptionsTest@4fd63c43]" name="testGetAnnotatorsByIdOptionsError" duration-ms="1" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:36 UTC">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[id cannot be empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: id cannot be empty
at com.ibm.cloud.sdk.core.util.Validator.notEmpty(Validator.java:84)
at com.ibm.watson.health.acd.v1.model.GetAnnotatorsByIdOptions.<init>(GetAnnotatorsByIdOptions.java:71)
at com.ibm.watson.health.acd.v1.model.GetAnnotatorsByIdOptions$Builder.build(GetAnnotatorsByIdOptions.java:55)
at com.ibm.watson.health.acd.v1.model.GetAnnotatorsByIdOptionsTest.testGetAnnotatorsByIdOptionsError(GetAnnotatorsByIdOptionsTest.java:44)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAnnotatorsByIdOptionsError -->
      </class> <!-- com.ibm.watson.health.acd.v1.model.GetAnnotatorsByIdOptionsTest -->
      <class name="com.ibm.watson.health.acd.v1.model.UpdateFlowsOptionsTest">
        <test-method status="PASS" signature="testUpdateFlowsOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.model.UpdateFlowsOptionsTest@31c0c7e5]" name="testUpdateFlowsOptions" duration-ms="6" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateFlowsOptions -->
        <test-method status="PASS" signature="testUpdateFlowsOptionsError()[pri:0, instance:com.ibm.watson.health.acd.v1.model.UpdateFlowsOptionsTest@31c0c7e5]" name="testUpdateFlowsOptionsError" duration-ms="1" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:36 UTC">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[id cannot be empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: id cannot be empty
at com.ibm.cloud.sdk.core.util.Validator.notEmpty(Validator.java:84)
at com.ibm.watson.health.acd.v1.model.UpdateFlowsOptions.<init>(UpdateFlowsOptions.java:221)
at com.ibm.watson.health.acd.v1.model.UpdateFlowsOptions$Builder.build(UpdateFlowsOptions.java:82)
at com.ibm.watson.health.acd.v1.model.UpdateFlowsOptionsTest.testUpdateFlowsOptionsError(UpdateFlowsOptionsTest.java:101)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateFlowsOptionsError -->
      </class> <!-- com.ibm.watson.health.acd.v1.model.UpdateFlowsOptionsTest -->
      <class name="com.ibm.watson.health.acd.v1.model.CartridgesPostMultipartOptionsTest">
        <test-method status="PASS" signature="testCartridgesPostMultipartOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.model.CartridgesPostMultipartOptionsTest@77db231c]" name="testCartridgesPostMultipartOptions" duration-ms="1" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCartridgesPostMultipartOptions -->
      </class> <!-- com.ibm.watson.health.acd.v1.model.CartridgesPostMultipartOptionsTest -->
      <class name="com.ibm.watson.health.acd.v1.model.RunPipelineWithFlowOptionsTest">
        <test-method status="PASS" signature="testRunPipelineWithFlowOptions()[pri:0, instance:com.ibm.watson.health.acd.v1.model.RunPipelineWithFlowOptionsTest@cd93621]" name="testRunPipelineWithFlowOptions" duration-ms="7" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:36 UTC">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRunPipelineWithFlowOptions -->
        <test-method status="PASS" signature="testRunPipelineWithFlowOptionsError()[pri:0, instance:com.ibm.watson.health.acd.v1.model.RunPipelineWithFlowOptionsTest@cd93621]" name="testRunPipelineWithFlowOptionsError" duration-ms="0" started-at="2021-01-14T19:30:36 UTC" finished-at="2021-01-14T19:30:36 UTC">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[flowId cannot be empty]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: flowId cannot be empty
at com.ibm.cloud.sdk.core.util.Validator.notEmpty(Validator.java:84)
at com.ibm.watson.health.acd.v1.model.RunPipelineWithFlowOptions.<init>(RunPipelineWithFlowOptions.java:134)
at com.ibm.watson.health.acd.v1.model.RunPipelineWithFlowOptions$Builder.build(RunPipelineWithFlowOptions.java:72)
at com.ibm.watson.health.acd.v1.model.RunPipelineWithFlowOptionsTest.testRunPipelineWithFlowOptionsError(RunPipelineWithFlowOptionsTest.java:114)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRunPipelineWithFlowOptionsError -->
      </class> <!-- com.ibm.watson.health.acd.v1.model.RunPipelineWithFlowOptionsTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
